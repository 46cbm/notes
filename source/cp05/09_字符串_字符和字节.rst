9 字符串、字符和字节
====================

9.1 不受限制的字符串函数
------------------------

这些函数用NUL来寻找字符串的结尾。在使用这些函数的时候，程序员必须自己保证字符串有正确的结尾，不会溢出内存。

-  复制字符串 ``char *strcpy(char *dst, char const *scr);``
-  连接字符串 ``char *strcat(char *dst, char const *scr);``
-  字符串比较 ``int strcmp(char const *s1, char const *s2);``

前两个函数的返回值是第一个参数的一份拷贝，即指向目标字符数组的指针的拷贝。比较函数如果s1小于s2返回负数（一般是-1），s1等于s2返回0，s1大于s2返回整数（一般是1）。

9.2 长度受限的字符串函数
------------------------

下面的函数都会操作到len个长度为止。

.. code:: c

   char *strncpy(char *dst, char const *src, size_t len);
   char *strncat(char *dst, char const *src, size_t len);
   int strncmp(char const *s1, char const *s2, size_t len);

注意strncpy如果src的长度超过了len，则最后的NUL不会加上，需要我们手动加。下面的写法保证了dst正确结束。

.. code:: c

   char buffer[BSIZE];
   ...
   strncpy(buffer, name, BSIZE);
   buffer[BSIZE - 1] = '\0';

9.3 字符串查找基础
------------------

查找一个字符
''''''''''''

第二个函数返回匹配的最后一个字符的指针。如果没有匹配的结果，则返回NULL。

.. code:: c

   char *strchr(char const *str, int ch);
   char *strrchr(char const *str, int ch);

查找任何几个字符
''''''''''''''''

返回group中的字符第一次在str中出现的位置。

.. code:: c

   char *strpbrk(char const *str, char const *group);

下面的例子中ans最后指向’e’。

.. code:: c

   char string[20] = "Hello there, honey";
   char *ans;

   ans = strpbrk(string, "aeiou");

查找一个子串
''''''''''''

如果s2是空串，返回s1。如果没有匹配结果，返回NULL。

.. code:: c

   char *strstr(char const *s1, char const *s2);
