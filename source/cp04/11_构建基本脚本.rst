11 构建基本脚本
===============

11.1 创建shell脚本
------------------

创建shell脚本时，第一行必须指定要使用的shell。#后面的惊叹号会告诉shell用哪个shell来执行脚本。

.. code:: bash

   #!/bin/bash

11.2 显示消息
-------------

echo命令可以用单引号或者双引号划定字符串。但是如果字符串中要包含单引号或双引号，则划定的符号必须选用另一个。-n参数可以让echo输出的行尾没有换行符

.. code:: bash

   #!/bin/bash
   # This script displays the date and who's logged on
   echo -n "The time and data are:"
   date
   echo "Let's see who's logged into the system:"
   who

执行输出

::

   The time and data are:2019年 8月22日 星期四 22时44分46秒 CST
   Let's see who's logged into the system:
   leo      console  Aug 22 12:49 
   leo      ttys000  Aug 22 12:49 
   leo      ttys001  Aug 22 12:49 
   leo      ttys002  Aug 22 12:49 
   leo      ttys003  Aug 22 12:49 
   leo      ttys004  Aug 22 12:49 
   leo      ttys005  Aug 22 12:49 
   leo      ttys006  Aug 22 12:49 
   leo      ttys008  Aug 22 17:56 

11.3 使用变量
-------------

环境变量
~~~~~~~~

.. code:: bash

   #!/bin/bash
   # display user information from the system.
   echo "User info for userid:$USER"
   echo UID: $UID
   echo HOME: $HOME

输出

::

   User info for userid:leo
   UID: 501
   HOME: /Users/leo

可以看到\ :math:`在字符串中也会引用变量。如果要把`\ 当做一个字符输出，则需要用$。另外，除了直接用\ :math:`引用变量，还可以用``\ {variable}`的形式引用变量。

用户变量
~~~~~~~~

   注意变量、等号和值之间没有空格！

shell脚本会自动决定变量值得数据类型。在脚本的整个生命周期里，shell脚本中定义的变量会一直保持这个值，直到shell脚本运行结束被删除掉。

命令替换
~~~~~~~~

即从命令的输出中提取信息，并将其值赋给变量。有两种方式

-  使用反引号
-  $()

.. code:: bash

   #!/bin/bash
   # copy the /usr/bin directory listing to a log file
   today=$(date +%y%m%d)
   ls -la /usr/bin > log.$today

``+%y%m%d``\ 可以养date的输出格式化，执行后我们可以看到当前目录多了一个文件\ ``log.190822``\ （今天的日期是2019年8月22日）

   注意命令替换会创建一个子shell来运行相应的命令。
