1 基础操作
==========

1.1 SELECT
----------

DISTINCT
~~~~~~~~

DISTINCT的返回结果会去掉相同的值。

.. code:: sql

   mysql> SELECT vend_id FROM products;
   +---------+
   | vend_id |
   +---------+
   |    1001 |
   |    1001 |
   |    1001 |
   |    1002 |
   |    1002 |
   |    1003 |
   |    1003 |
   |    1003 |
   |    1003 |
   |    1003 |
   |    1003 |
   |    1003 |
   |    1005 |
   |    1005 |
   +---------+
   14 rows in set (0.00 sec)

   mysql> SELECT DISTINCT vend_id FROM products;
   +---------+
   | vend_id |
   +---------+
   |    1001 |
   |    1002 |
   |    1003 |
   |    1005 |
   +---------+
   4 rows in set (0.00 sec)

但是注意DISTINCT不能对部分列使用，而会对它后面跟着的所有列起作用。而跟上多个列之后，相同指的是多个列的组合相同。

.. code:: sql

   mysql> SELECT DISTINCT vend_id, prod_name FROM products;
   +---------+----------------+
   | vend_id | prod_name      |
   +---------+----------------+
   |    1001 | .5 ton anvil   |
   |    1001 | 1 ton anvil    |
   |    1001 | 2 ton anvil    |
   |    1003 | Detonator      |
   |    1003 | Bird seed      |
   |    1003 | Carrots        |
   |    1002 | Fuses          |
   |    1005 | JetPack 1000   |
   |    1005 | JetPack 2000   |
   |    1002 | Oil can        |
   |    1003 | Safe           |
   |    1003 | Sling          |
   |    1003 | TNT (1 stick)  |
   |    1003 | TNT (5 sticks) |
   +---------+----------------+
   14 rows in set (0.01 sec)

LIMIT
~~~~~

显示显示的数量。如果后面是形如 LIMIT x,y;
则x是从0开始的。也就是说要显示第一行结果，用LIMIT 0,1;

1.2 排序检索数据
----------------

下面的语句会根据prod_price排序。如果prod_price相同，则再按prod_name排序。

.. code:: sql

   mysql> SELECT prod_id, prod_price, prod_name
       -> FROM products
       -> ORDER BY prod_price, prod_name;

默认是升序排序，如果要降序排序，可以在ORDER
BY的后面加DESC。DESC只对一列起作用，如果要多列都降序，则需要再每一列的后面都加DESC。下面的语句只会对prod_price降序排序，prod_name还是升序。

.. code:: sql

   mysql> SELECT prod_id, prod_price, prod_name
       -> FROM products
       -> ORDER BY prod_price DESC, prod_name;

与DESC相反的是ASC，但是默认就是升序，所以ASC没太大用。

1.3 过滤数据
------------

这一小节将WHERE的用法

BETWEEN
~~~~~~~

.. code:: sql

   mysql> SELECT prod_name, prod_price
       -> FROM products
       -> WHERE prod_price BETWEEN 5 AND 10;
   +----------------+------------+
   | prod_name      | prod_price |
   +----------------+------------+
   | .5 ton anvil   |       5.99 |
   | 1 ton anvil    |       9.99 |
   | Bird seed      |      10.00 |
   | Oil can        |       8.99 |
   | TNT (5 sticks) |      10.00 |
   +----------------+------------+
   5 rows in set (0.00 sec)

空值检查 IS NULL
~~~~~~~~~~~~~~~~

.. code:: sql

   mysql> SELECT cust_id 
       -> FROM customers
       -> WHERE cust_email IS NULL;
   +---------+
   | cust_id |
   +---------+
   |   10002 |
   |   10005 |
   +---------+
   2 rows in set (0.00 sec)

AND OR
~~~~~~

AND的优先级高于OR

.. code:: sql

   mysql> SELECT prod_id, prod_price, prod_name
       -> FROM products
       -> WHERE vend_id = 1003 AND prod_price <= 10;
   +---------+------------+----------------+
   | prod_id | prod_price | prod_name      |
   +---------+------------+----------------+
   | FB      |      10.00 | Bird seed      |
   | FC      |       2.50 | Carrots        |
   | SLING   |       4.49 | Sling          |
   | TNT1    |       2.50 | TNT (1 stick)  |
   | TNT2    |      10.00 | TNT (5 sticks) |
   +---------+------------+----------------+
   5 rows in set (0.01 sec)

IN
~~

.. code:: sql

   mysql> SELECT prod_name, prod_price
       -> FROM products
       -> WHERE vend_id IN (1002, 1003)
       -> ORDER BY prod_name;

另外可加NOT对IN进行取反。NOT可以对IN、BETWEEN和EXISTS进行使用。

.. code:: sql

   mysql> SELECT prod_name, prod_price
       -> FROM products
       -> WHERE vend_id NOT IN (1002, 1003)
       -> ORDER BY prod_name;

1.4 通配符
----------

``LIKE pattern``\ 。通配符搜索的处理性能较差。

%通配符，匹配任何字符出现任意次数
'''''''''''''''''''''''''''''''''

注意%可以匹配任何东西，但是不能匹配NULL

.. code:: sql

   mysql> SELECT prod_id, prod_name
       -> FROM products
       -> WHERE prod_name LIKE 'jet%';
   +---------+--------------+
   | prod_id | prod_name    |
   +---------+--------------+
   | JP1000  | JetPack 1000 |
   | JP2000  | JetPack 2000 |
   +---------+--------------+
   2 rows in set (0.01 sec)

\_通配符，匹配单个字符
''''''''''''''''''''''

.. code:: sql

   mysql> SELECT prod_id, prod_name
       -> FROM products
       -> WHERE prod_name LIKE '_ ton anvil';
   +---------+-------------+
   | prod_id | prod_name   |
   +---------+-------------+
   | ANV02   | 1 ton anvil |
   | ANV03   | 2 ton anvil |
   +---------+-------------+
   2 rows in set (0.00 sec)
